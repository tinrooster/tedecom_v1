version: '3.8'

services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - tedecom-network
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:5000
    volumes:
      - ./client/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/tedecom
      - LOG_DIR=/var/log/tedecom
      - PORT=5000
      - JWT_SECRET=your_jwt_secret_here
      - CORS_ORIGIN=http://localhost
    depends_on:
      - mongodb
    volumes:
      - ./logs:/var/log/tedecom
      - ./reports:/app/reports
    networks:
      - tedecom-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/monitoring/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:4
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - tedecom-network
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=tedecom
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/tedecom --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  tedecom-network:
    driver: bridge

volumes:
  mongodb_data:
